;;-*-coding: utf-8;-*-
(define-abbrev-table 'global-abbrev-table
  '(
    ("tes" "test" nil :count 3)
   ))

(define-abbrev-table 'latex-mode-abbrev-table
  '(
    ("accelaration" "acceleration" nil :count 0)
    ("accesible" "accessible" nil :count 0)
    ("accompliments" "accomplishments" nil :count 0)
    ("accuarcy" "accuracy" nil :count 0)
    ("accuary" "actuary" nil :count 0)
    ("acess" "Access" nil :count 0)
    ("acheieve" "achieve" nil :count 0)
    ("aginst" "against" nil :count 0)
    ("agregates" "aggregates" nil :count 0)
    ("alegbra" "algebra" nil :count 0)
    ("algorithim" "algorithm" nil :count 0)
    ("algorthm" "Algorithm" nil :count 0)
    ("anohter" "Another" nil :count 0)
    ("approaximately" "approximately" nil :count 0)
    ("arguement" "argument" nil :count 0)
    ("asuming" "assuming" nil :count 0)
    ("aurthor" "author" nil :count 0)
    ("aussmption" "assumption" nil :count 0)
    ("authetification" "authentication" nil :count 0)
    ("availiable" "available" nil :count 1)
    ("avaliable" "available" nil :count 0)
    ("becauce" "Because" nil :count 1)
    ("becuase" "Because" nil :count 0)
    ("boudary" "boundary" nil :count 0)
    ("calcuate" "calculate" nil :count 0)
    ("cartisian" "Cartesian" nil :count 0)
    ("cartitan" "Cartesian" nil :count 0)
    ("catogorized" "categorized" nil :count 0)
    ("charicterize" "characterize" nil :count 0)
    ("claer" "clear" nil :count 0)
    ("cloest" "closest" nil :count 0)
    ("coeffcient" "coefficient" nil :count 0)
    ("colomn" "column" nil :count 0)
    ("combinition" "combination" nil :count 1)
    ("comparision" "comparison" nil :count 2)
    ("completiton" "completion" nil :count 0)
    ("compuation" "computation" nil :count 0)
    ("comunications" "communications" nil :count 0)
    ("concequencies" "consequences" nil :count 0)
    ("condtions" "conditions" nil :count 0)
    ("confrences" "conferences" nil :count 0)
    ("continous" "continuous" nil :count 0)
    ("contruct" "construct" nil :count 0)
    ("convienience" "convenience" nil :count 0)
    ("convinent" "convenient" nil :count 0)
    ("coodinate" "coordinate" nil :count 0)
    ("coresponding" "corresponding" nil :count 1)
    ("corrdinate" "coordinate" nil :count 1)
    ("correspoding" "corresponding" nil :count 0)
    ("criple" "Cripple" nil :count 0)
    ("curosr" "cursor" nil :count 0)
    ("defination" "definition" nil :count 0)
    ("defition" "deviation" nil :count 0)
    ("degenercy" "degeneracy" nil :count 1)
    ("deneracy" "degeneracy" nil :count 0)
    ("denoteed" "denoted" nil :count 0)
    ("depenance" "dependence" nil :count 0)
    ("dependences" "dependencies" nil :count 0)
    ("dertermines" "determines" nil :count 0)
    ("diagagnoal" "diagonal" nil :count 0)
    ("diagnal" "diagonal" nil :count 0)
    ("diagnoal" "diagonal" nil :count 2)
    ("diagnoally" "diagonally" nil :count 0)
    ("dialet" "dialect" nil :count 0)
    ("diffrentiable" "differentiable" nil :count 0)
    ("disadvanage" "disadvantage" nil :count 0)
    ("disscussed" "discussed" nil :count 0)
    ("distingushable" "distinguishable" nil :count 0)
    ("dynmaical" "dynamical" nil :count 0)
    ("dynmaics" "dynamics" nil :count 0)
    ("elimating" "Eliminating" nil :count 0)
    ("equilibirum" "equilibrium" nil :count 0)
    ("equivlant" "equivalent" nil :count 0)
    ("equivlent" "equivalent" nil :count 0)
    ("esitimate" "estimate" nil :count 0)
    ("exculsion" "exclusion" nil :count 1)
    ("exicted" "excited" nil :count 0)
    ("exmaple" "example" nil :count 0)
    ("expriments" "experiments" nil :count 0)
    ("exsit" "exist" nil :count 5)
    ("exsits" "exists" nil :count 4)
    ("familar" "familiar" nil :count 1)
    ("frist" "first" nil :count 0)
    ("froces" "forces" nil :count 0)
    ("fundation" "foundation" nil :count 0)
    ("furthur" "further" nil :count 0)
    ("gassuian" "Gaussian" nil :count 0)
    ("glossory" "glossary" nil :count 0)
    ("homogenoues" "homogeneous" nil :count 0)
    ("homogenous" "homogeneous" nil :count 0)
    ("hte" "the" nil :count 4)
    ("hybrization" "hybridization" nil :count 0)
    ("imediate" "immediate" nil :count 0)
    ("indisdinguishable" "indistinguishable" nil :count 0)
    ("ineternet" "Internet" nil :count 0)
    ("insctructions" "instructions" nil :count 0)
    ("irrversible" "irreversible" nil :count 0)
    ("iteartion" "iteration" nil :count 0)
    ("largerst" "largest" nil :count 0)
    ("leran" "learn" nil :count 0)
    ("magenitute" "magnitude" nil :count 0)
    ("maxium" "maximum" nil :count 6)
    ("mecellaneous" "Miscellaneous" nil :count 0)
    ("mechainics" "mechanics" nil :count 0)
    ("meories" "memories" nil :count 0)
    ("micellaneous" "Miscellaneous" nil :count 0)
    ("multipler" "multiplier" nil :count 1)
    ("negelible" "negligible" nil :count 0)
    ("negeligeble" "negligible" nil :count 1)
    ("negligable" "negligible" nil :count 0)
    ("nessarily" "necessarily" nil :count 0)
    ("occurance" "occurrence" nil :count 0)
    ("occured" "occurred" nil :count 0)
    ("ofr" "for" nil :count 0)
    ("ommited" "omitted" nil :count 1)
    ("ommiting" "omitting" nil :count 0)
    ("opearator" "operator" nil :count 0)
    ("orginial" "original" nil :count 0)
    ("orthognal" "orthogonal" nil :count 2)
    ("orthognoal" "orthogonal" nil :count 0)
    ("paralell" "parallel" nil :count 0)
    ("parallelizatio" "parallelism" nil :count 0)
    ("parellel" "parallel" nil :count 0)
    ("paticular" "particular" nil :count 2)
    ("patition" "partition" nil :count 0)
    ("perserved" "preserved" nil :count 0)
    ("perspetive" "perspective" nil :count 0)
    ("picuture" "picture" nil :count 0)
    ("poinsitve" "positive" nil :count 0)
    ("possbility" "possibility" nil :count 0)
    ("possoion" "Poisson" nil :count 0)
    ("postive" "positive" nil :count 0)
    ("procrastinae" "procrastinate" nil :count 0)
    ("propotional" "proportional" nil :count 0)
    ("qeustion" "question" nil :count 0)
    ("realtive" "relative" nil :count 0)
    ("reasonale" "reasonable" nil :count 0)
    ("recurtion" "recursion" nil :count 0)
    ("relavant" "relevant" nil :count 0)
    ("relavent" "relevant" nil :count 0)
    ("repeatition" "repetition" nil :count 0)
    ("replusion" "repulsion" nil :count 0)
    ("resisuals" "residuals" nil :count 0)
    ("resiual" "residual" nil :count 0)
    ("reverible" "reversible" nil :count 0)
    ("satisified" "satisfied" nil :count 0)
    ("satisifies" "satisfies" nil :count 1)
    ("satisties" "satisfies" nil :count 0)
    ("selction" "Selection" nil :count 0)
    ("seperate" "separate" nil :count 1)
    ("siginificant" "significant" nil :count 0)
    ("similarily" "similarly" nil :count 0)
    ("singluar" "singular" nil :count 2)
    ("sloution" "solution" nil :count 0)
    ("sparcity" "sparsity" nil :count 0)
    ("speicial" "special" nil :count 0)
    ("sphercal" "spherical" nil :count 0)
    ("statisstics" "Statistics" nil :count 0)
    ("strucutured" "structured" nil :count 0)
    ("subsript" "subscript" nil :count 0)
    ("substitude" "Substitute" nil :count 0)
    ("substituding" "Substituting" nil :count 0)
    ("substraction" "subtraction" nil :count 0)
    ("subtitude" "Substitute" nil :count 0)
    ("succcedds" "succeeds" nil :count 0)
    ("suitations" "situations" nil :count 0)
    ("superstruture" "superstructure" nil :count 0)
    ("supress" "Suppress" nil :count 0)
    ("suqare" "square" nil :count 0)
    ("synchroization" "Synchronization" nil :count 0)
    ("taht" "that" nil :count 0)
    ("teh" "the" nil :count 2)
    ("tehn" "Then" nil :count 0)
    ("tempearature" "temperature" nil :count 0)
    ("tempearture" "temperature" nil :count 0)
    ("therad" "thread" nil :count 0)
    ("threhold" "threshold" nil :count 0)
    ("translational" "transnational" nil :count 3)
    ("transpotation" "transportation" nil :count 0)
    ("triagular" "triangular" nil :count 1)
    ("trigonomotry" "Trigonometry" nil :count 0)
    ("typcially" "Typically" nil :count 0)
    ("typtical" "Typical" nil :count 0)
    ("uiqueness" "uniqueness" nil :count 0)
    ("unqiue" "unique" nil :count 3)
    ("vecotr" "vector" nil :count 0)
    ("versons" "versions" nil :count 0)
    ("vibrational" "vibrations" nil :count 10)
    ("wnat" "want" nil :count 1)
    ("wriiten" "written" nil :count 0)
    ("yeilds" "yields" nil :count 0)
   ))

(define-abbrev-table 'org-mode-abbrev-table
  '(
    ("acounts" "accounts" nil :count 0)
    ("alreday" "already" nil :count 0)
    ("analyize" "analyze" nil :count 0)
    ("appartments" "apartments" nil :count 0)
    ("availalbe" "available" nil :count 0)
    ("befificial" "beneficial" nil :count 0)
    ("besell" "Bessel" nil :count 0)
    ("calulating" "calculating" nil :count 0)
    ("catagory" "category" nil :count 0)
    ("cloumn" "column" nil :count 0)
    ("commucation" "commutation" nil :count 0)
    ("conceputal" "conceptual" nil :count 0)
    ("conserts" "concerts" nil :count 0)
    ("consupmtion" "consumption" nil :count 0)
    ("continous" "continuous" nil :count 0)
    ("contnue" "continue" nil :count 0)
    ("convinient" "convenient" nil :count 0)
    ("corrdinate" "coordinate" nil :count 0)
    ("correspondance" "correspondence" nil :count 0)
    ("critial" "critical" nil :count 0)
    ("derviation" "derivation" nil :count 0)
    ("disscuss" "discuss" nil :count 0)
    ("distinguishale" "distinguishable" nil :count 0)
    ("ecltron" "electron" nil :count 0)
    ("english" "English" nil :count 6)
    ("engough" "enough" nil :count 0)
    ("enligsh" "English" nil :count 0)
    ("excecute" "execute" nil :count 0)
    ("exsiting" "existing" nil :count 0)
    ("familar" "familiar" nil :count 0)
    ("follwoing" "following" nil :count 0)
    ("fullfill" "fulfill" nil :count 0)
    ("functionalies" "functionaries" nil :count 0)
    ("fundemaentals" "Fundamentals" nil :count 0)
    ("howver" "However" nil :count 0)
    ("hungury" "hungry" nil :count 0)
    ("integligelbe" "intelligible" nil :count 0)
    ("intresting" "interesting" nil :count 0)
    ("japanese" "Japanese" nil :count 2)
    ("jounarl" "journal" nil :count 0)
    ("langrange" "Lagrange" nil :count 0)
    ("learing" "learning" nil :count 0)
    ("leran" "learn" nil :count 2)
    ("literall" "literal" nil :count 0)
    ("mamual" "manual" nil :count 0)
    ("maximium" "Maximum" nil :count 0)
    ("miniutes" "minutes" nil :count 0)
    ("moive" "movie" nil :count 0)
    ("morden" "Modern" nil :count 0)
    ("mordern" "modern" nil :count 0)
    ("multipler" "multiplier" nil :count 0)
    ("nessassarily" "necessarily" nil :count 0)
    ("notroriously" "notoriously" nil :count 0)
    ("observor" "Observer" nil :count 0)
    ("occuring" "occurring" nil :count 0)
    ("ofr" "for" nil :count 1)
    ("opearations" "operations" nil :count 0)
    ("owrk" "work" nil :count 0)
    ("positioins" "positions" nil :count 0)
    ("positition" "position" nil :count 0)
    ("possion" "Poisson" nil :count 4)
    ("possitive" "positive" nil :count 0)
    ("pronoucing" "pronouncing" nil :count 0)
    ("pronounciation" "pronunciation" nil :count 0)
    ("prounciation" "pronunciation" nil :count 0)
    ("questionaire" "questionnaire" nil :count 0)
    ("reformualte" "reformulate" nil :count 0)
    ("relatitity" "Relativity" nil :count 0)
    ("relavence" "relevance" nil :count 0)
    ("relavent" "relevant" nil :count 0)
    ("relevent" "relevant" nil :count 1)
    ("reshedule" "reschedule" nil :count 0)
    ("retreive" "retrieve" nil :count 0)
    ("sctrach" "scratch" nil :count 0)
    ("separted" "separated" nil :count 0)
    ("shchedule" "schedule" nil :count 0)
    ("simutaneously" "simultaneously" nil :count 0)
    ("slove" "solve" nil :count 0)
    ("sotre" "store" nil :count 0)
    ("speicial" "special" nil :count 0)
    ("squeez" "squeeze" nil :count 0)
    ("squezze" "squeeze" nil :count 0)
    ("strucutured" "structured" nil :count 0)
    ("stv" "ATV" nil :count 0)
    ("sufficent" "sufficient" nil :count 0)
    ("syllbus" "syllabus" nil :count 0)
    ("syncronizing" "synchronizing" nil :count 0)
    ("taht" "that" nil :count 1)
    ("tranlation" "translation" nil :count 0)
    ("understandble" "understandable" nil :count 0)
    ("untracable" "intractable" nil :count 0)
    ("usse" "uses" nil :count 0)
    ("varialbe" "variable" nil :count 0)
    ("vedio" "video" nil :count 1)
    ("waht" "what" nil :count 0)
    ("wedsday" "Wednesday" nil :count 0)
   ))

